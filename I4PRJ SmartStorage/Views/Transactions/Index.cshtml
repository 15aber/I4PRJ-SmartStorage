@model I4PRJ_SmartStorage.ViewModels.TransactionViewModel

@{
    ViewBag.Title = "Transaction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <ol class="breadcrumb">
            <li class="active">
                <strong>Transaction</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>List of Transactions</h5>
                    <div class="ibox-tools">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Restock", "NewRestock", null, new { @class = "btn btn-primary btn-xs" })
                                @Html.ActionLink("Transaction", "NewTransaction", null, new { @class = "btn btn-primary btn-xs" })
                            </div>
                        </div>
                    </div>
                    <div class="ibox-content">

                        <table class="table table-striped table-bordered table-hover" id="datatable-table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Transaction.ProductId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Transaction.FromInventoryId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Transaction.ToInventoryId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Transaction.Quantity)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Transaction.DateTime)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Transaction.ByUser)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Transactions)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Product.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FromInventory.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ToInventory.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Quantity)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DateTime)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ByUser)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/datatables")
}

@section Scripts {
    @Scripts.Render("~/bundles/datatables")
}