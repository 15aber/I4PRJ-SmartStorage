@model I4PRJ_SmartStorage.ViewModels.TransactionViewModel

@{
    ViewBag.Title = "Transaction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Transaction", "List")
            </li>
            <li class="active">
                <strong>New</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Restock Inventory</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("SaveRestock", "Transactions"))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.ToInventoryId, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.ToInventoryId, new SelectList(Model.ToInventory, "InventoryId", "Name"), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ToInventoryId)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductId, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.ProductId, new SelectList(Model.Products, "ProductId", "Name"), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProductId)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", type = "number", step = "0.1", min = "0", value = "" })
                                    @Html.ValidationMessageFor(model => model.Quantity)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/validate")
}