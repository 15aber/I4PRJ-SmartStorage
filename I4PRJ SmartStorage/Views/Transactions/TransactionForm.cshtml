@model I4PRJ_SmartStorage.ViewModels.TransactionViewModel

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>title</h2>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Create Stock</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                @Html.LabelFor(model => model.FromInventory, "From", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.FromInventoryId, new SelectList(Model.FromInventory, "InventoryId", "Name"), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FromInventory)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ToInventory, "To", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ToInventoryId, new SelectList(Model.ToInventory, "InventoryId", "Name"), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ToInventory)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Product, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ProductId, new SelectList(Model.Product, "ProductId", "Name"), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Product)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Quantity)
                                    @Html.ValidationMessageFor(model => model.Quantity)
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                    @Html.ActionLink("Cancel", "Create", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/validate")
}